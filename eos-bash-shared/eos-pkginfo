#!/bin/bash

DIE() {
    echo "$PROGNAME: error: $1" >&2
    Usage
    exit 1
}

Helper() {
    for HELPER in paru yay ; do
        if [ -x /usr/bin/$HELPER ] ; then
            return
        fi
    done
    DIE "AUR helper not found!"
}

FindUrl() {
    # If $PKGNAME is not a package, then assume it is a file of an installed package and find the package name.

    if (! /usr/bin/$HELPER -Q "$PKGNAME" >& /dev/null) ; then
        if (! /usr/bin/$HELPER -Si "$PKGNAME" >& /dev/null) ; then
            local item fail=no
            case "${PKGNAME::1}" in
                "/") item="$PKGNAME" ;;            # file name
                *)   item="/usr/bin/$PKGNAME" ;;   # program name
            esac
            if [ -r "$item" ] ; then
                PKGNAME="$(LANG=C /usr/bin/$HELPER -Qo "$item" 2>/dev/null | awk '{print $(NF-1)}')"
                [ -z "$PKGNAME" ] && DIE "given name '$PKGNAME' does not refer to a package or an installed file."
            fi
        fi
    fi

    PKGINFO="$(LANG=C $HELPER -Qi "$PKGNAME" 2>/dev/null)"
    if [ -z "$PKGINFO" ] ; then
        PKGINFO="$(LANG=C $HELPER -Si "$PKGNAME" 2>/dev/null)"
    fi
    [ -n "$PKGINFO" ] || DIE "package '$PKGNAME' not found"
}

IsEncrypt-OSpkg() {
    local pkg="$1"
    local eos_pkg
    local eos_pkgs

    readarray -t eos_pkgs <<< $(/usr/bin/pacman -Slq Encrypt-OS)

    for eos_pkg in "${eos_pkgs[@]}" ; do
        if [ "$pkg" = "$eos_pkg" ] ; then
            return 0
        fi
    done
    return 1
}

Github2Gitlab_local() {
    echo "$url"
    return

    eos-github2gitlab "$@"
    return

    local url="$1"

    case "$EOS_FILESERVER_SITE" in
        gitlab)
            echo "$url" | sed -e 's|/github\.com/|/gitlab.com/|' \
                              -e 's|/Encrypt-OS/|/Encrypt-OS-filemirror/|' \
                              -e 's|/tree/master/|/-/blob/master/|' \
                              -e 's|/eos-bash-shared$|/eos-apps-info|'
        ;;
        github | *)
            echo "$url" ;;
    esac
}

FixUrl() {
    # PKGNAME and PKGNAME_ARG may be different. Then PKGNAME_ARG is a program name,
    # and it may have a special man page.

    # if pkg has several apps, or pkgname is also a special app:
    # Here we handle Encrypt-OS packages only.

    local man=""
    local man_add

    case "$PKGNAME_ARG" in
        eos-welcome | $PKGNAME)
            man_add="/man/$PKGNAME/$PKGNAME.md"
            ;;
        *)  man_add="/man/$PKGNAME_ARG/$PKGNAME_ARG.md"
            ;;
    esac
    man="$(Github2Gitlab_local "$url")"
    man+="$man_add"
    if (wget -q --timeout=5 -O /dev/null "$man") ; then
        url+="$man_add"
        #url="$man"
    fi
}

OpenUrl() {
    local url="$(echo "$PKGINFO" | /usr/bin/grep ^URL | /usr/bin/head -n1 | /usr/bin/awk '{print $NF}')"
    case "$url" in
        https://*) ;;
        http://*)
            read -p "Change $url to https based (Y/n)? " >&2
            case "$REPLY" in
                ""|[yY]*) url="${url/http:/https:}" ;;
            esac
            ;;
        "") DIE "URL for package '$PKGNAME' not found" ;;
        *)  DIE "unsupported URL '$url'" ;;
    esac

    if (IsEncrypt-OSpkg "$PKGNAME_ARG") ; then
        eos-apps-info-helper "$PKGNAME"
    else
        FixUrl
        #echo "$BROWSER" "$url" >&2
        $BROWSER "$url" >& /dev/null
    fi
}

Options() {
    PKGNAME=""
    PKGNAME_ARG=""

    local arg

    for arg in "$@" ; do
        case "$arg" in
            --browser=*) BROWSER="${arg#*=}" ;;
            -*) DIE "option $arg is not supported." ;;
            *)  PKGNAME="$arg" ;;
        esac
    done

    [ -n "$PKGNAME" ] || DIE "give package-name"

    PKGNAME_ARG="$PKGNAME"
}

Usage() {
    cat <<EOF >&2
Usage: $PROGNAME <name>
  <name>   A package name, program name, or a file path included in a package.
           Given program name or file path must exist in the current system.
           The package can be from EncryptOS, Arch, or AUR.
EOF
}

Main()
{
    source /etc/eos-script-lib-yad.conf || return 1

    local PROGNAME="$(/usr/bin/basename "$0")"
    local PKGNAME
    local PKGNAME_ARG
    local HELPER
    local PKGINFO
    local BROWSER=/usr/bin/xdg-open

    Helper
    Options "$@"
    FindUrl
    OpenUrl
}

Main "$@"
