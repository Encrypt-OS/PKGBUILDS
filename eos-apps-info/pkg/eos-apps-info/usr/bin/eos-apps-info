#!/bin/bash

UpdateDatabase() {
    pkexec pacman -Fy >/dev/null
}

CheckDatabaseUpdate() {
    local txt=""
    local cmd

    if ! /usr/bin/pacman -Fl eos-bash-shared >&/dev/null ; then
        # need to run pacman -Fy
        txt+="\nPacman database needs updating using command:\n"
        txt+="<tt>  pacman -Fy</tt>\n"
        cmd=(
            eos_yad --form --title="Database update needed" --text="$txt" --image=dialog-information
            --button=yad-quit:$exit_quit
            --button="Update database now!system-run!":$exit_updatedb
        )
        "${cmd[@]}"
        case "$?" in
            $exit_updatedb)   UpdateDatabase ;;
            $exit_quit | *)   exit ;;
        esac
    fi
}

Main()
{
    source /usr/share/encryptos/scripts/eos-script-lib-yad || return 1

    # yad command exit codes (don't use even numbers)
    local exit_quit=11
    local exit_updatedb=13

    CheckDatabaseUpdate

    local update_label="Update database"

    local txt=""
    txt+="The buttons below will show information about the apps in the Encrypt-OS repository.\n"
    txt+="Click an app button and an information window opens.\n\n"
    txt+="Note: you may need to click the <b>$update_label</b> button below to update your package database.\n\n"
    txt+="A special selection of <i>bonus items</i> is appended!\n\n"

    local cmd=(
        eos_yad --form --title="Encrypt-OS apps info" --text="$txt" --columns=4 --align-buttons --image=dialog-information
        # --no-buttons
        --button="$update_label!!Updates package database and restarts this app":$exit_updatedb
        --buttons-layout=center
    )
    local packages=$(/usr/bin/pacman -Sl Encrypt-OS | /usr/bin/awk '{print $2}')
    local apps=()
    local pkg app app2
    local blabel="Bonus items"

    readarray -t app <<< $(/usr/bin/pacman -Fl $packages 2>/dev/null | /usr/bin/grep "usr/bin/" | /usr/bin/grep -v "usr/bin/$" | /usr/bin/awk '{print $2}' | /usr/bin/sed 's|usr/bin/||' | /usr/bin/sort)
    [ -n "$app" ] || return 1
    apps+=("${app[@]}")

    apps+=("$blabel")                              # separation label for the bonus apps
    apps+=($(eos-apps-info-helper --show-bonus))   # the bonus apps!

    for app in "${apps[@]}" ; do

        # Hide or rename some apps.

        case "$app" in
            # not needed here or deprecated:
            ckbcomp | eos-waiting-indicator | eos-FindAppIcon | eos-kbd-set | eos-hooks-runner | eos-reboot-required* | eos-arch-news \
                | eos-grub-fix-initrd-generation | keyserver-rank* | nvidia-installer-update-db | polybar-msg | eos-kill-yad-zombies \
                | welcome-dnd | yad-settings | yad-tools | eos-latest-arch-mirrorlist | eos-apps-info-helper | eos-install-mode-run-calamares \
                | eos-run-cmd-with-su | *.sh | *calamares* | update-mirrorlist | nvidia-installer-kernel-para | eos-select-file-server | wormc \
                | nvidia-installer-check | eos-rankmirrors-from-hook | curl-exit-code-to-string | eos-quickstart | arc* | dbufstat \
                | *.zfs | raidz* | z*)
                continue ;;
            lxdm-binary | lxdm-config | lxdm)
                # why these show up ???
                continue ;;
            eos-pkginfo | eos-pkg-changelog | nvidia-inst)
                # deprecated for now
                continue ;;

            # no support currently:
            device-info | RunInTerminalEx | RunInTerminalOpt | bashdb | yad-icon-browser | eos-pkginfo-aur | eos-github2gitlab | eos-kernel-nvidia-update-check)
                continue ;;

            # rename:
            eos-pkginfo-aur)  app2=eos-pkginfo ;;
            eos-welcome)      app2=welcome ;;
            su-c_wrapper)     app2="$app" ; app="su-c__wrapper" ;;   # handle underscore character !!
            *)                app2="$app" ;;
        esac

        # Add app buttons to the command.

        case "$app" in
            "$blabel") cmd+=(--field="<b><i>$app:</i></b>":LBL "") ;;                        # add this to visually separate bonus apps
            *)         cmd+=(--field="$app!!$app2":fbtn "eos-apps-info-helper '$app2'") ;;
        esac
    done

    while true ; do
        "${cmd[@]}"
        case "$?" in
            $exit_updatedb) UpdateDatabase ;;
            *) break ;;
        esac
    done
}

Main "$@"
